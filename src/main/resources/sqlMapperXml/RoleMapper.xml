<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zm.hospital.mapper.RoleMapper">
    <!--开始-->
    <resultMap id="BaseResultMap" type="com.zm.hospital.model.Role">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="seq" jdbcType="INTEGER" property="seq"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, seq, status, create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM role
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insertSelective" parameterType="com.zm.hospital.model.Role">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="seq != null">
                seq,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="seq != null">
                #{seq,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zm.hospital.model.Role">
        update role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="seq != null">
                seq = #{seq,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--角色列表查询条件-->
    <sql id="query_user_list_where">
        <foreach close="" collection="condition" index="key" item="value" open="" separator=" and ">
            <choose>
                <when test=" key=='search_name' and value!='' ">
                    and t1.name like concat("%",#{value},"%")
                </when>
                <otherwise>
                    and ${key}=#{value}
                </otherwise>
            </choose>
        </foreach>
    </sql>
    <select id="findRolePageCondition" parameterType="PageInfo" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        role t1
        <where>
            1
            <include refid="query_user_list_where"/>
        </where>
        ORDER BY
        <foreach close="" collection="orderby" index="field" item="order" open="" separator=",">
            ${field} ${order}
        </foreach>
        LIMIT #{from}, #{size}
    </select>
    <select id="findRolePageCount" parameterType="PageInfo" resultType="java.lang.Integer">
        select count(*) as count
        from role t1
        <where>
            1
            <include refid="query_user_list_where"/>
        </where>
    </select>

    <!--获得有所有的角色的列表-->
    <select id="getAllRoleList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        role t1
        WHERE 1
    </select>

    <!--通过id找到用户-->
    <select id="findRoleById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM role t1
        WHERE t1.id=#{id}
    </select>

    <!--根据用户id查找该用户的所有角色实体-->
    <select id="findRolesByUserId" resultMap="BaseResultMap">
        SELECT role.*
        FROM
        user_role, role
        WHERE user_role.role_id = role.id AND user_role.user_id = #{userId}
    </select>
</mapper>