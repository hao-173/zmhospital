<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zm.hospital.mapper.PatientMapper">
    <!--开始-->

    <resultMap id="BaseResultMap" type="com.zm.hospital.model.Patient">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="identity_card" jdbcType="VARCHAR" property="identityCard"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="age" jdbcType="SMALLINT" property="age"/>
        <result column="medical_card" jdbcType="VARCHAR" property="medicalCard"/>
        <result column="sex" jdbcType="BIT" property="sex"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, identity_card, name, phone, age, medical_card, sex
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from his_patient
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from his_patient
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insertSelective" parameterType="com.zm.hospital.model.Patient">
        insert into his_patient
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="identityCard != null">
                identity_card,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="medicalCard != null">
                medical_card,
            </if>
            <if test="sex != null">
                sex,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="identityCard != null">
                #{identityCard,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=SMALLINT},
            </if>
            <if test="medicalCard != null">
                #{medicalCard,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zm.hospital.model.Patient">
        update his_patient
        <set>
            <if test="identityCard != null">
                identity_card = #{identityCard,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=SMALLINT},
            </if>
            <if test="medicalCard != null">
                medical_card = #{medicalCard,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>


    <!--列表查询条件-->
    <sql id="query_user_list_where">
        #什么都没有,就输出个1好了
        <if test=" condition.size == 0">
            1
        </if>
        <foreach close="" collection="condition" index="key" item="value" open="" separator=" and ">
            <choose>
                <when test=" key=='search_name' and value!='' ">
                    ( t1.name like concat("%",#{value},"%") or t1.identity_card like concat("%",#{value},"%")
                    or t1.medical_card like concat("%",#{value},"%") or t1.phone like concat("%",#{value},"%") )
                </when>
                <otherwise>
                    ${key}=#{value}
                </otherwise>
            </choose>
        </foreach>
    </sql>
    <select id="findPageCondition" parameterType="PageInfo" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        his_patient t1
        <where>
            1 and
            <include refid="query_user_list_where"/>
        </where>
        ORDER BY
        <foreach close="" collection="orderby" index="field" item="order" open="" separator=",">
            ${field} ${order}
        </foreach>
        LIMIT #{from}, #{size}
    </select>
    <select id="findPageCount" parameterType="PageInfo" resultType="java.lang.Integer">
        select count(*) as count
        from his_patient t1
        <where>
            1 and
            <include refid="query_user_list_where"/>
        </where>
    </select>

</mapper>